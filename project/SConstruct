import os
import sys
import wdconfig

if os.getenv('RTT_ROOT'):
    RTT_ROOT = os.getenv('RTT_ROOT')
else:
    RTT_ROOT = os.path.normpath(os.getcwd() + '/..')

sys.path = sys.path + [os.path.join(RTT_ROOT, 'tools')]
from building import *

TARGET = 'wdproject-stm32.' + wdconfig.TARGET_EXT

env = Environment(tools = ['mingw'],
	AS = wdconfig.AS, ASFLAGS = wdconfig.AFLAGS,
	CC = wdconfig.CC, CCFLAGS = wdconfig.CFLAGS,
	AR = wdconfig.AR, ARFLAGS = '-rc',
	LINK = wdconfig.LINK, LINKFLAGS = wdconfig.LFLAGS)
env.PrependENVPath('PATH', wdconfig.EXEC_PATH)

Export('RTT_ROOT')
Export('wdconfig')

# prepare building environment
objs = PrepareBuilding(env, RTT_ROOT)

# STM32 firmware library building script
objs = SConscript( RTT_ROOT +'/stm32lib/SConscript', variant_dir='build/stm32lib', duplicate=0)

objs = objs + SConscript( RTT_ROOT +'/drivers/SConscript' , variant_dir='build/drivers' , duplicate=0)
	
objs = objs + SConscript( RTT_ROOT +'/user/SConscript' , variant_dir='build/user' , duplicate=0)
objs = objs + SConscript( RTT_ROOT +'/system/SConscript' , variant_dir='build/system' , duplicate=0)
objs = objs + SConscript( RTT_ROOT +'/windgui/SConscript' , variant_dir='build/windgui' , duplicate=0)



#if GetDepend('RT_USING_RTGUI'):
#    objs = objs + SConscript(RTT_ROOT + '/examples/gui/SConscript', variant_dir='build/examples/gui', duplicate=0)

# build program 
env.Program(TARGET, objs)

# end building 
EndBuilding(TARGET)
